#!/bin/sh
# Generate platform includes for the Kconfig files.
# Expects the following arguments:
#   $1     - The complete path of the base Kconfig.generated file
#   ${@:2} - All platform definition files for which entries are generated
# Outputs the files:
#   $1.platforms $1.platform_types

extract_var() {
  {
    cat "$1"
    printf "printit:\n\t@echo \$($2)\n"
  } | ${MAKE:-make} --no-print-directory -f - printit
}

PROLOGUE="# vi:set ft=kconfig:
# This file is auto-generated."
PT=""
OUTFILE=$1; shift

echo "$PROLOGUE" >"$OUTFILE".platforms
for p in "$@"; do
  pn=${p##*/}
  pn=${pn%.conf}
  echo "config PLATFORM_TYPE_$pn"
  echo "  bool \"$(extract_var $p PLATFORM_NAME)\""

  DEP=""
  for a in $(extract_var $p PLATFORM_ARCH); do
    if [ -z "$DEP" ]; then
      DEP="  depends on BUILD_ARCH_$a"
    else
      DEP="$DEP || BUILD_ARCH_$a"
    fi
  done
  printf "$DEP\n\n"

  PT="$PT  default \"$pn\" if PLATFORM_TYPE_${pn}\n"
done >>"$OUTFILE".platforms

{
  echo    "$PROLOGUE"
  echo    "config PLATFORM_TYPE"
  echo    "  string"
  printf  "$PT"
} >"$OUTFILE".platform_types
